var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.355,1,1.566]],["body/controllers/AppController.html",[0,2.121,1,2.451,2,1.473,3,0.725,4,0.616,5,0.616,6,2.726,7,0.725,8,1.846,9,3.912,10,1.955,11,0.053,12,1.122,13,3.396,14,1.473,15,1.611,16,0.909,17,0.976,18,2.017,19,2.726,20,0.725,21,0.422,22,2.726,23,2.285,24,1.473,25,3.396,26,0.042,27,0.042]],["title/modules/AppModule.html",[28,1.03,29,1.566]],["body/modules/AppModule.html",[1,2.191,2,1.416,3,0.813,4,0.415,5,0.415,11,0.053,16,1.044,17,0.657,18,1.98,19,1.835,20,0.488,21,0.284,26,0.032,27,0.032,28,1.441,29,2.766,30,0.992,31,0.992,32,1.316,33,1.316,34,0.992,35,2.191,36,1.316,37,1.835,38,1.835,39,1.835,40,2.274,41,1.879,42,1.316,43,1.316,44,2.286,45,2.196,46,2.286,47,2.286,48,1.835,49,1.139,50,1.139,51,2.286,52,2.286,53,1.316,54,2.56,55,3.263,56,2.286,57,2.286,58,2.286,59,3.523,60,3.263,61,2.286,62,2.286,63,2.286,64,2.286,65,2.286,66,2.286,67,2.286,68,2.286,69,1.835,70,2.286,71,2.286,72,2.286,73,2.068,74,3.805,75,3.805,76,3.805,77,2.286,78,3.805,79,2.286,80,3.263,81,2.286,82,2.286,83,1.835,84,2.286,85,2.286,86,2.286]],["title/injectables/AppService.html",[18,1.18,87,1.03]],["body/injectables/AppService.html",[3,0.762,4,0.647,5,0.647,7,0.762,8,1.903,9,3.98,11,0.052,12,1.178,14,1.547,15,1.661,16,0.762,17,1.025,18,1.903,20,0.762,21,0.443,24,1.547,26,0.043,27,0.043,87,1.661,88,2.053,89,2.862,90,3.566,91,3.566,92,3.566]],["title/modules/AuthModule.html",[28,1.03,93,1.355]],["body/modules/AuthModule.html",[2,1.35,3,0.665,4,0.565,5,0.565,11,0.053,16,0.953,17,0.894,20,0.665,21,0.386,26,0.039,27,0.039,28,1.69,30,1.35,31,1.35,32,1.792,33,1.792,34,1.35,35,2.57,36,2.318,41,2.318,42,1.792,43,1.792,45,2.094,93,2.495,94,2.499,95,2.499,96,2.495,97,3.112,98,4.026,99,1.792,100,3.112,101,3.112,102,3.112,103,2.094,104,3.112,105,2.499,106,3.112,107,3.112]],["title/entities/Book.html",[108,1.83,109,1.18]],["body/entities/Book.html",[3,0.432,4,0.367,5,0.367,7,0.432,10,2.673,11,0.053,12,1.534,15,1.874,16,0.637,20,0.432,21,0.251,26,0.029,27,0.029,108,2.008,109,1.295,110,1.36,111,1.622,112,1.718,113,2.042,114,1.768,115,2.847,116,2.387,117,2.847,118,2.847,119,2.847,120,2.847,121,1.758,122,3.727,123,2.395,124,2.942,125,2.021,126,2.021,127,2.395,128,2.395,129,2.008,130,2.395,131,2.395,132,3.144,133,3.144,134,3.144,135,2.847,136,2.983,137,2.021,138,2.021,139,2.021,140,2.635,141,2.021,142,2.021,143,2.021,144,2.021,145,2.021,146,2.021,147,2.021,148,2.021,149,2.021,150,2.021,151,4.523,152,2.983,153,1.36,154,3.805,155,1.164,156,3.124,157,2.021,158,1.622,159,1.622,160,1.622,161,1.622,162,1.622]],["title/classes/BookDto.html",[21,0.338,163,1.355]],["body/classes/BookDto.html",[3,0.445,4,0.378,5,0.378,7,0.445,10,2.63,11,0.053,12,1.509,15,1.886,16,0.445,20,0.445,21,0.259,23,3.542,26,0.03,27,0.03,112,1.758,113,2.08,114,1.8,115,2.9,117,2.9,118,2.9,119,2.9,120,2.9,121,1.73,122,3.667,123,2.451,124,2.975,127,2.451,128,2.451,129,2.054,130,2.451,131,2.451,132,3.192,133,3.192,134,3.192,135,3.192,140,2.054,154,3.76,155,1.201,156,3.074,158,2.451,159,2.451,160,2.451,161,2.451,162,2.451,163,1.522,164,1.403,165,1.674,166,2.085,167,2.085,168,2.085,169,2.085,170,2.085,171,2.085,172,2.085]],["title/controllers/BooksController.html",[0,1.355,173,1.566]],["body/controllers/BooksController.html",[0,0.473,2,0.412,3,0.348,4,0.172,5,0.172,7,0.203,8,0.706,10,1.64,11,0.053,12,1.026,14,1.348,15,1.387,16,0.811,17,0.468,20,0.203,21,0.118,23,0.638,24,1.236,26,0.016,27,0.016,53,0.546,54,1.095,59,0.762,99,0.546,105,0.762,109,1.648,114,2.004,116,1.437,121,1.589,124,1.703,129,2.359,140,1.437,155,0.546,163,1.656,173,0.937,174,0.762,175,0.949,176,0.949,177,2.875,178,1.714,179,1.714,180,1.306,181,1.714,182,1.714,183,1.627,184,0.949,185,4.967,186,2.667,187,4.602,188,0.949,189,1.627,190,3.505,191,0.949,192,2.032,193,3.505,194,4.273,195,1.627,196,0.949,197,1.627,198,1.627,199,0.949,200,1.789,201,1.789,202,1.789,203,2.555,204,0.949,205,2.94,206,0.949,207,1.627,208,2.135,209,2.531,210,1.627,211,0.949,212,0.949,213,0.949,214,1.627,215,2.531,216,0.949,217,2.135,218,0.949,219,0.949,220,0.949,221,1.627,222,1.627,223,1.627,224,0.949,225,0.949,226,0.949,227,1.627,228,1.627,229,0.949,230,1.627,231,3.798,232,0.949,233,3.323,234,0.949,235,0.949,236,2.848,237,1.627,238,2.135,239,0.949,240,0.949,241,0.949,242,0.949,243,0.927,244,0.762,245,0.762,246,0.762,247,3.107,248,3.323,249,0.949,250,0.949,251,0.638,252,0.949,253,0.949,254,2.135,255,0.638,256,0.949,257,0.949,258,0.949,259,0.949,260,0.762,261,0.546,262,1.095,263,0.949,264,2.848,265,3.107,266,3.798,267,0.949,268,3.107,269,4.459,270,2.286,271,0.949,272,2.848,273,2.531,274,4.273,275,2.848,276,0.949,277,2.135,278,2.135,279,0.949,280,2.135,281,2.135,282,2.135,283,0.949,284,0.949,285,0.949,286,0.949,287,0.949,288,0.762,289,0.949,290,0.949,291,1.627,292,1.627,293,0.949,294,0.949,295,0.949,296,0.949,297,0.949,298,0.949,299,0.949]],["title/modules/BooksModule.html",[28,1.03,40,1.355]],["body/modules/BooksModule.html",[2,1.682,3,0.628,4,0.533,5,0.533,11,0.053,16,1.053,17,0.844,20,0.628,21,0.365,26,0.038,27,0.038,28,1.643,30,1.275,31,1.275,32,1.692,33,1.692,34,1.275,35,2.499,36,1.692,40,2.542,41,2.232,42,1.692,43,1.692,45,2.608,48,2.358,49,1.464,93,2.391,109,1.275,173,2.499,243,2.138,244,2.358,251,1.976,300,2.358,301,2.937,302,2.358,303,2.937,304,2.937,305,2.937,306,2.937]],["title/injectables/BooksService.html",[87,1.03,243,1.18]],["body/injectables/BooksService.html",[3,0.422,4,0.358,5,0.358,7,0.422,8,1.273,11,0.053,12,1.432,14,1.796,15,1.784,16,0.884,17,0.568,20,0.422,21,0.245,24,1.796,26,0.029,27,0.029,49,0.984,87,1.111,88,1.137,109,0.857,116,2.355,121,1.567,153,1.329,163,2.237,177,3.314,178,2.355,179,2.355,180,2.355,181,2.355,182,2.355,186,3.322,200,2.497,201,2.497,202,2.497,203,3.226,205,2.809,243,1.273,246,1.585,251,1.329,255,1.329,261,1.689,262,1.329,270,3.109,307,1.585,308,1.975,309,3.109,310,1.975,311,2.933,312,2.933,313,1.975,314,2.933,315,1.975,316,2.933,317,1.975,318,1.975,319,2.933,320,1.975,321,2.933,322,1.975,323,1.585,324,1.975,325,1.975,326,1.975,327,2.933,328,3.499,329,1.975,330,1.975,331,1.975,332,1.975,333,1.975,334,1.975]],["title/classes/ConfigService.html",[21,0.338,50,1.355]],["body/classes/ConfigService.html",[3,0.475,4,0.403,5,0.403,7,0.475,8,1.387,11,0.053,12,1.353,14,1.625,15,1.866,16,0.475,20,0.475,21,0.276,22,1.783,24,1.625,26,0.031,27,0.031,49,1.107,50,2.041,69,3.288,73,1.593,83,1.783,110,1.495,121,1.711,164,1.495,192,1.783,200,2.156,201,2.156,202,2.156,261,1.279,262,2.52,335,1.495,336,4.519,337,3.196,338,4.096,339,3.196,340,2.221,341,3.196,342,2.221,343,3.196,344,3.196,345,2.221,346,2.221,347,2.221,348,3.744,349,3.196,350,4.096,351,2.221,352,1.783,353,3.288,354,2.221,355,2.221,356,2.221,357,3.196,358,2.221,359,1.783,360,2.221,361,2.221,362,2.221,363,2.221,364,2.221,365,2.221,366,2.221,367,2.221,368,2.221,369,2.221,370,2.221,371,2.221,372,2.221,373,2.221,374,2.221,375,2.221,376,2.221,377,2.221,378,1.783,379,1.783,380,1.783,381,1.783,382,1.783,383,1.783]],["title/injectables/JwtStrategy.html",[87,1.03,96,1.355]],["body/injectables/JwtStrategy.html",[3,0.628,4,0.533,5,0.533,7,0.628,8,1.682,11,0.053,12,1.281,14,1.275,16,0.927,17,0.844,20,0.628,21,0.365,24,1.275,26,0.038,27,0.038,73,1.464,87,1.468,88,1.692,96,1.932,99,1.692,103,1.976,121,1.112,177,2.92,200,1.692,201,1.692,202,1.692,203,2.608,255,1.976,260,2.358,261,2.499,323,2.358,359,2.358,384,2.358,385,3.877,386,3.877,387,3.877,388,2.937,389,3.877,390,2.937,391,4.339,392,2.937,393,2.937,394,2.937,395,2.358,396,2.937,397,2.937,398,2.937,399,2.937,400,2.937,401,2.937,402,2.937]],["title/coverage.html",[403,2.478]],["body/coverage.html",[0,1.966,1,1.737,5,0.547,6,2.422,11,0.052,18,1.309,21,0.546,26,0.039,27,0.039,34,1.309,50,1.966,73,1.503,87,1.664,89,2.422,96,1.503,108,2.03,109,1.712,111,2.422,121,1.142,163,1.503,165,2.422,173,1.737,174,2.422,243,1.309,288,4.233,307,2.422,335,2.654,384,2.422,403,2.03,404,3.016,405,3.016,406,3.016,407,3.016,408,3.016,409,4.396,410,3.945,411,3.016,412,3.016,413,3.016,414,3.945,415,2.422,416,3.016,417,3.016,418,3.016,419,3.016]],["title/dependencies.html",[31,1.416,420,1.835]],["body/dependencies.html",[11,0.054,17,0.891,26,0.039,27,0.039,31,1.345,49,1.545,53,1.785,54,2.702,99,1.785,103,2.086,153,2.086,155,1.785,245,3.224,395,3.224,421,4.454,422,3.1,423,3.1,424,3.1,425,3.1,426,3.1,427,4.016,428,3.1,429,3.1,430,3.1,431,3.1,432,3.1,433,3.1,434,3.1,435,3.1,436,3.1,437,3.1,438,3.1,439,3.1,440,3.1,441,3.1,442,3.1,443,3.1,444,3.1,445,3.1,446,3.1,447,3.1,448,3.1,449,3.1,450,3.1,451,3.1]],["title/miscellaneous/functions.html",[452,1.316,453,2.619]],["body/miscellaneous/functions.html",[7,0.868,11,0.046,26,0.046,27,0.046,34,2.181,415,3.263,452,2.341,453,3.263,454,4.065]],["title/index.html",[7,0.488,455,2.286,456,2.286]],["body/index.html",[4,0.508,11,0.052,26,0.037,27,0.037,53,2.44,113,1.613,114,1.396,156,2.851,309,2.248,403,1.885,457,2.801,458,2.801,459,3.756,460,2.801,461,2.801,462,2.801,463,2.801,464,2.801,465,2.801,466,2.801,467,2.801,468,2.801,469,4.965,470,2.801,471,2.801,472,2.801,473,4.86,474,2.801,475,2.801,476,3.756,477,2.801,478,2.801,479,2.801,480,2.801,481,3.756,482,3.756,483,2.801,484,2.801,485,2.801,486,3.756,487,3.756,488,2.801,489,2.801,490,2.801,491,2.801,492,2.801,493,2.248,494,2.801,495,2.801,496,2.801,497,2.801,498,2.801,499,2.801,500,2.801,501,2.801,502,2.801,503,2.801,504,2.801,505,2.801,506,2.801,507,2.801,508,2.801,509,2.801,510,2.248]],["title/modules.html",[30,1.598]],["body/modules.html",[11,0.045,26,0.045,27,0.045,29,2.248,30,1.694,40,1.945,93,1.945,493,3.967,511,4.941,512,4.941,513,4.941]],["title/overview.html",[514,2.956]],["body/overview.html",[2,1.383,11,0.05,18,1.959,26,0.04,27,0.04,28,1.207,29,2.901,30,1.383,31,1.383,32,1.836,33,1.836,34,1.383,35,1.836,36,1.836,37,2.56,38,2.56,39,2.56,40,2.553,41,2.355,42,1.836,43,1.836,88,1.836,93,2.454,94,2.56,95,2.56,96,2.25,110,2.145,164,2.145,243,1.959,300,2.56,302,2.56,514,2.56,515,4.514,516,3.188,517,3.188]],["title/properties.html",[112,1.879,420,1.835]],["body/properties.html",[11,0.052,26,0.046,27,0.046,112,2.305,113,2.305,114,1.995,510,3.213,518,4.003,519,4.003,520,4.003]],["title/miscellaneous/variables.html",[452,1.316,521,2.619]],["body/miscellaneous/variables.html",[7,0.826,11,0.05,26,0.045,27,0.045,50,2.295,73,1.926,335,2.6,352,3.102,353,3.102,378,3.102,379,3.102,380,3.102,381,3.102,382,3.102,383,3.102,452,2.225,521,3.102,522,3.865]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":288,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["0.0.1",{"_index":519,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["0.3.19",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":517,"title":{},"body":{"overview.html":{}}}],["1.3.1",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["1.9.4",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["17.12.1",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":516,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":209,"title":{},"body":{"controllers/BooksController.html":{}}}],["3",{"_index":515,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["3.12.0",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":197,"title":{},"body":{"controllers/BooksController.html":{}}}],["5.0.0",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["592",{"_index":161,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["592})@column",{"_index":145,"title":{},"body":{"entities/Book.html":{}}}],["7.2.0",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":157,"title":{},"body":{"entities/Book.html":{}}}],["99})@primarygeneratedcolumn",{"_index":141,"title":{},"body":{"entities/Book.html":{}}}],["actualizado",{"_index":228,"title":{},"body":{"controllers/BooksController.html":{}}}],["actualizar",{"_index":227,"title":{},"body":{"controllers/BooksController.html":{}}}],["amazing",{"_index":494,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":250,"title":{},"body":{"controllers/BooksController.html":{}}}],["apibearerauth('access",{"_index":259,"title":{},"body":{"controllers/BooksController.html":{}}}],["apioperation",{"_index":247,"title":{},"body":{"controllers/BooksController.html":{}}}],["apiproperty",{"_index":154,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["apiproperty({example",{"_index":122,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["apiresponse",{"_index":248,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags",{"_index":249,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags('book",{"_index":256,"title":{},"body":{"controllers/BooksController.html":{}}}],["app",{"_index":471,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":465,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":177,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["authguard",{"_index":252,"title":{},"body":{"controllers/BooksController.html":{}}}],["authmodule",{"_index":93,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":113,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"index.html":{},"properties.html":{}}}],["await",{"_index":270,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["backers",{"_index":495,"title":{},"body":{"index.html":{}}}],["body",{"_index":238,"title":{},"body":{"controllers/BooksController.html":{}}}],["book",{"_index":109,"title":{"entities/Book.html":{}},"body":{"entities/Book.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["book.dto",{"_index":246,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["book.entity",{"_index":251,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["bookdto",{"_index":163,"title":{"classes/BookDto.html":{}},"body":{"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["bookid",{"_index":205,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["books",{"_index":176,"title":{},"body":{"controllers/BooksController.html":{}}}],["books.controller",{"_index":304,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":244,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{}}}],["books/books.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["bookscontroller",{"_index":173,"title":{"controllers/BooksController.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["booksmodule",{"_index":40,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksrepository",{"_index":311,"title":{},"body":{"injectables/BooksService.html":{}}}],["booksservice",{"_index":243,"title":{"injectables/BooksService.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["book})@apiresponse({status",{"_index":196,"title":{},"body":{"controllers/BooksController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":513,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":511,"title":{},"body":{"modules.html":{}}}],["building",{"_index":460,"title":{},"body":{"index.html":{}}}],["cervantes",{"_index":159,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["cervantes'})@column",{"_index":125,"title":{},"body":{"entities/Book.html":{}}}],["class",{"_index":21,"title":{"classes/BookDto.html":{},"classes/ConfigService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["classes",{"_index":164,"title":{},"body":{"classes/BookDto.html":{},"classes/ConfigService.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":300,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_imports",{"_index":301,"title":{},"body":{"modules/BooksModule.html":{}}}],["cluster_booksmodule_providers",{"_index":302,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["column",{"_index":151,"title":{},"body":{"entities/Book.html":{}}}],["column('text",{"_index":136,"title":{},"body":{"entities/Book.html":{}}}],["config/.../config.service.ts",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/config.service",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["config/config.service.ts",{"_index":335,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.service.ts:17",{"_index":345,"title":{},"body":{"classes/ConfigService.html":{}}}],["config/config.service.ts:22",{"_index":347,"title":{},"body":{"classes/ConfigService.html":{}}}],["config/config.service.ts:5",{"_index":342,"title":{},"body":{"classes/ConfigService.html":{}}}],["config/config.service.ts:8",{"_index":351,"title":{},"body":{"classes/ConfigService.html":{}}}],["configservice",{"_index":50,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env).ensurevalues",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configservice.gettypeormconfig",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor",{"_index":261,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(booksrepository",{"_index":308,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(env",{"_index":340,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"coverage.html":{}}}],["controller('books",{"_index":257,"title":{},"body":{"controllers/BooksController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["coverage",{"_index":403,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creado",{"_index":195,"title":{},"body":{"controllers/BooksController.html":{}}}],["crear",{"_index":189,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook",{"_index":178,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["createbook(newbook",{"_index":312,"title":{},"body":{"injectables/BooksService.html":{}}}],["createbook(request",{"_index":184,"title":{},"body":{"controllers/BooksController.html":{}}}],["data",{"_index":269,"title":{},"body":{"controllers/BooksController.html":{}}}],["data['affected",{"_index":287,"title":{},"body":{"controllers/BooksController.html":{}}}],["database",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{}}}],["date.now",{"_index":268,"title":{},"body":{"controllers/BooksController.html":{}}}],["datos",{"_index":193,"title":{},"body":{"controllers/BooksController.html":{}}}],["dd",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":124,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["debug",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["debug.log",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["default",{"_index":352,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["del",{"_index":129,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["delete",{"_index":239,"title":{},"body":{"controllers/BooksController.html":{}}}],["delete(':bookid",{"_index":285,"title":{},"body":{"controllers/BooksController.html":{}}}],["delete(':bookid')@apioperation({summary",{"_index":206,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebook",{"_index":179,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["deletebook(bookid",{"_index":314,"title":{},"body":{"injectables/BooksService.html":{}}}],["deletebook(request",{"_index":204,"title":{},"body":{"controllers/BooksController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":114,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":472,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":221,"title":{},"body":{"controllers/BooksController.html":{}}}],["dirname",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["dist/**/*.entity.js",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{}}}],["documentation",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["don",{"_index":132,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["duration",{"_index":299,"title":{},"body":{"controllers/BooksController.html":{}}}],["e2e",{"_index":483,"title":{},"body":{"index.html":{}}}],["edición",{"_index":128,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["efficient",{"_index":461,"title":{},"body":{"index.html":{}}}],["elapsedtime",{"_index":292,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminado",{"_index":210,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminar",{"_index":207,"title":{},"body":{"controllers/BooksController.html":{}}}],["ensurevalues",{"_index":337,"title":{},"body":{"classes/ConfigService.html":{}}}],["ensurevalues(keys",{"_index":344,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":110,"title":{},"body":{"entities/Book.html":{},"classes/ConfigService.html":{},"overview.html":{}}}],["entity",{"_index":108,"title":{"entities/Book.html":{}},"body":{"entities/Book.html":{},"coverage.html":{}}}],["env",{"_index":343,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${key",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{}}}],["error",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["error(`config",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.log",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["específico",{"_index":277,"title":{},"body":{"controllers/BooksController.html":{}}}],["específico'})@apiresponse({status",{"_index":208,"title":{},"body":{"controllers/BooksController.html":{}}}],["esta",{"_index":127,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["example",{"_index":156,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["express",{"_index":245,"title":{},"body":{"controllers/BooksController.html":{},"dependencies.html":{}}}],["extends",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["filename",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["findall",{"_index":180,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findall(@req",{"_index":267,"title":{},"body":{"controllers/BooksController.html":{}}}],["findall(params",{"_index":316,"title":{},"body":{"injectables/BooksService.html":{}}}],["findall(request",{"_index":212,"title":{},"body":{"controllers/BooksController.html":{}}}],["findbook",{"_index":181,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["findbook(bookid",{"_index":319,"title":{},"body":{"injectables/BooksService.html":{}}}],["findbook(request",{"_index":219,"title":{},"body":{"controllers/BooksController.html":{}}}],["finishtime",{"_index":291,"title":{},"body":{"controllers/BooksController.html":{}}}],["forbidden",{"_index":198,"title":{},"body":{"controllers/BooksController.html":{}}}],["format",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":281,"title":{},"body":{"controllers/BooksController.html":{}}}],["framework",{"_index":459,"title":{},"body":{"index.html":{}}}],["function",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":453,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genre",{"_index":115,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["get(':bookid",{"_index":276,"title":{},"body":{"controllers/BooksController.html":{}}}],["get(':bookid')@apioperation({summary",{"_index":220,"title":{},"body":{"controllers/BooksController.html":{}}}],["get()@apioperation({summary",{"_index":213,"title":{},"body":{"controllers/BooksController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":455,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":338,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue",{"_index":339,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":349,"title":{},"body":{"classes/ConfigService.html":{}}}],["grow",{"_index":490,"title":{},"body":{"index.html":{}}}],["hello",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":501,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["hidalgo",{"_index":131,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["host",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{}}}],["httpexception",{"_index":323,"title":{},"body":{"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpexception('invalid",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://nestjs.com",{"_index":507,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":255,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["httpstatus.created",{"_index":282,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.ok",{"_index":266,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.unauthorized",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":116,"title":{},"body":{"entities/Book.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["identifier",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["image_url",{"_index":117,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["info.log",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["información",{"_index":222,"title":{},"body":{"controllers/BooksController.html":{}}}],["ingenioso",{"_index":130,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["inject",{"_index":241,"title":{},"body":{"controllers/BooksController.html":{}}}],["inject(winston_module_provider",{"_index":263,"title":{},"body":{"controllers/BooksController.html":{}}}],["injectable",{"_index":87,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":324,"title":{},"body":{"injectables/BooksService.html":{}}}],["injectrepository(book",{"_index":325,"title":{},"body":{"injectables/BooksService.html":{}}}],["installation",{"_index":468,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":470,"title":{},"body":{"index.html":{}}}],["joi",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":497,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":96,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{}}}],["kamil",{"_index":504,"title":{},"body":{"index.html":{}}}],["key",{"_index":354,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":346,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{}}}],["la",{"_index":134,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["level",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{}}}],["libro",{"_index":194,"title":{},"body":{"controllers/BooksController.html":{}}}],["libro'})@apiresponse({status",{"_index":191,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros",{"_index":217,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros'})@apiresponse({status",{"_index":216,"title":{},"body":{"controllers/BooksController.html":{}}}],["license",{"_index":510,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":487,"title":{},"body":{"index.html":{}}}],["lista",{"_index":215,"title":{},"body":{"controllers/BooksController.html":{}}}],["literal",{"_index":341,"title":{},"body":{"classes/ConfigService.html":{}}}],["log/debug",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["log/error",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["log/info",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":254,"title":{},"body":{"controllers/BooksController.html":{}}}],["mancha",{"_index":135,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["mancha'})@column",{"_index":149,"title":{},"body":{"entities/Book.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":274,"title":{},"body":{"controllers/BooksController.html":{}}}],["metadata",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":294,"title":{},"body":{"controllers/BooksController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["miguel",{"_index":123,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["miscellaneous",{"_index":452,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":361,"title":{},"body":{"classes/ConfigService.html":{}}}],["mit",{"_index":486,"title":{},"body":{"index.html":{}}}],["mm",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":476,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":500,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":505,"title":{},"body":{"index.html":{}}}],["name",{"_index":201,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["nest",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":509,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":155,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"dependencies.html":{}}}],["new",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newbook",{"_index":186,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["node.js",{"_index":458,"title":{},"body":{"index.html":{}}}],["novela",{"_index":158,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["novela'})@column",{"_index":138,"title":{},"body":{"entities/Book.html":{}}}],["npm",{"_index":469,"title":{},"body":{"index.html":{}}}],["number",{"_index":140,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["object.assign(toupdate",{"_index":333,"title":{},"body":{"injectables/BooksService.html":{}}}],["obtener",{"_index":214,"title":{},"body":{"controllers/BooksController.html":{}}}],["ok",{"_index":275,"title":{},"body":{"controllers/BooksController.html":{}}}],["open",{"_index":488,"title":{},"body":{"index.html":{}}}],["optional",{"_index":202,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["overview",{"_index":514,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":420,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":118,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["param",{"_index":235,"title":{},"body":{"controllers/BooksController.html":{}}}],["param('bookid",{"_index":278,"title":{},"body":{"controllers/BooksController.html":{}}}],["parameters",{"_index":200,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["params",{"_index":318,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(bookid",{"_index":328,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(this.getvalue('tutorial_port",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{}}}],["passport",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{}}}],["path",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(__dirname",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":498,"title":{},"body":{"index.html":{}}}],["port",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":237,"title":{},"body":{"controllers/BooksController.html":{}}}],["post()@apioperation({summary",{"_index":188,"title":{},"body":{"controllers/BooksController.html":{}}}],["postgres",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{}}}],["prefix",{"_index":175,"title":{},"body":{"controllers/BooksController.html":{}}}],["primarygeneratedcolumn",{"_index":152,"title":{},"body":{"entities/Book.html":{}}}],["private",{"_index":262,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["production",{"_index":478,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":457,"title":{},"body":{"index.html":{}}}],["project",{"_index":489,"title":{},"body":{"index.html":{}}}],["promise",{"_index":203,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["properties",{"_index":112,"title":{"properties.html":{}},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"properties.html":{}}}],["property",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["public",{"_index":336,"title":{},"body":{"classes/ConfigService.html":{}}}],["publisher",{"_index":119,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["put",{"_index":240,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid",{"_index":289,"title":{},"body":{"controllers/BooksController.html":{}}}],["put(':bookid')@apioperation({summary",{"_index":226,"title":{},"body":{"controllers/BooksController.html":{}}}],["quijote",{"_index":133,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["read",{"_index":499,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["redoc",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":309,"title":{},"body":{"injectables/BooksService.html":{},"index.html":{}}}],["req",{"_index":236,"title":{},"body":{"controllers/BooksController.html":{}}}],["request",{"_index":185,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['method",{"_index":295,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['url",{"_index":297,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['user'].username",{"_index":298,"title":{},"body":{"controllers/BooksController.html":{}}}],["require('dotenv').config",{"_index":355,"title":{},"body":{"classes/ConfigService.html":{}}}],["res",{"_index":187,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.created).json",{"_index":284,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":273,"title":{},"body":{"controllers/BooksController.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["run",{"_index":473,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["santillana",{"_index":160,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["santillana'})@column",{"_index":147,"title":{},"body":{"entities/Book.html":{}}}],["scalable",{"_index":462,"title":{},"body":{"index.html":{}}}],["secret",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":463,"title":{},"body":{"index.html":{}}}],["session",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":464,"title":{},"body":{"index.html":{}}}],["sideway/formula",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["sobre",{"_index":223,"title":{},"body":{"controllers/BooksController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["specified",{"_index":280,"title":{},"body":{"controllers/BooksController.html":{}}}],["sponsors",{"_index":492,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["src/books/book.class.ts",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["src/books/book.dto.ts",{"_index":165,"title":{},"body":{"classes/BookDto.html":{},"coverage.html":{}}}],["src/books/book.dto.ts:13",{"_index":167,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:16",{"_index":166,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:19",{"_index":171,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:22",{"_index":170,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:25",{"_index":169,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:5",{"_index":172,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.dto.ts:8",{"_index":168,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/book.entity.ts",{"_index":111,"title":{},"body":{"entities/Book.html":{},"coverage.html":{}}}],["src/books/book.entity.ts:12",{"_index":150,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:16",{"_index":139,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:22",{"_index":137,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:26",{"_index":126,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:30",{"_index":148,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:34",{"_index":146,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:38",{"_index":144,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:8",{"_index":142,"title":{},"body":{"entities/Book.html":{}}}],["src/books/books.controller.ts",{"_index":174,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/books/books.controller.ts:116",{"_index":211,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:145",{"_index":229,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:167",{"_index":232,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:46",{"_index":218,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:65",{"_index":224,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:94",{"_index":199,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.module.ts",{"_index":303,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/books/books.service.ts",{"_index":307,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/books/books.service.ts:14",{"_index":317,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:18",{"_index":320,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:22",{"_index":313,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:26",{"_index":315,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:30",{"_index":322,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:8",{"_index":310,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/main.ts",{"_index":415,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stack",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":474,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":477,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":479,"title":{},"body":{"index.html":{}}}],["started",{"_index":456,"title":{"index.html":{}},"body":{}}],["starter",{"_index":467,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":233,"title":{},"body":{"controllers/BooksController.html":{}}}],["statements",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":265,"title":{},"body":{"controllers/BooksController.html":{}}}],["statuscode",{"_index":231,"title":{},"body":{"controllers/BooksController.html":{}}}],["stay",{"_index":502,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["summary",{"_index":264,"title":{},"body":{"controllers/BooksController.html":{}}}],["super",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":493,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":512,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":482,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":485,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":484,"title":{},"body":{"index.html":{}}}],["tests",{"_index":481,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":491,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.booksrepository.delete",{"_index":330,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.find",{"_index":326,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone",{"_index":327,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(newbook",{"_index":329,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(updated",{"_index":334,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksservice.createbook(newbook",{"_index":283,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.deletebook(bookid",{"_index":286,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findall(request.query",{"_index":271,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findbook(bookid",{"_index":279,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.updatebook(bookid",{"_index":290,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.env[key",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_database",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_host",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_password",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_user",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.logger.log",{"_index":293,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.writelog(starttime",{"_index":272,"title":{},"body":{"controllers/BooksController.html":{}}}],["throw",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["throwonmissing",{"_index":350,"title":{},"body":{"classes/ConfigService.html":{}}}],["title",{"_index":120,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["token",{"_index":260,"title":{},"body":{"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":503,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":331,"title":{},"body":{"injectables/BooksService.html":{}}}],["transports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["tutorial_database",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_host",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_password",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_port",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_user",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":508,"title":{},"body":{"index.html":{}}}],["type",{"_index":121,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["typeorm",{"_index":153,"title":{},"body":{"entities/Book.html":{},"injectables/BooksService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([book]),authmodule",{"_index":306,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forroot",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":348,"title":{},"body":{"classes/ConfigService.html":{}}}],["typescript",{"_index":466,"title":{},"body":{"index.html":{}}}],["ui",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":190,"title":{},"body":{"controllers/BooksController.html":{}}}],["undefined",{"_index":192,"title":{},"body":{"controllers/BooksController.html":{},"classes/ConfigService.html":{}}}],["unit",{"_index":480,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":520,"title":{},"body":{"properties.html":{}}}],["updatebook",{"_index":182,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["updatebook(bookid",{"_index":321,"title":{},"body":{"injectables/BooksService.html":{}}}],["updatebook(request",{"_index":225,"title":{},"body":{"controllers/BooksController.html":{}}}],["updated",{"_index":332,"title":{},"body":{"injectables/BooksService.html":{}}}],["url",{"_index":296,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards",{"_index":242,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards(authguard('jwt",{"_index":258,"title":{},"body":{"controllers/BooksController.html":{}}}],["user",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{}}}],["username",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{}}}],["utilities/auth.module",{"_index":305,"title":{},"body":{"modules/BooksModule.html":{}}}],["utilities/auth.module.ts",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["utilities/jwt.strategy.ts",{"_index":384,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["utilities/jwt.strategy.ts:14",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["utilities/jwt.strategy.ts:6",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":353,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":521,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":518,"title":{},"body":{"properties.html":{}}}],["void",{"_index":234,"title":{},"body":{"controllers/BooksController.html":{}}}],["watch",{"_index":475,"title":{},"body":{"index.html":{}}}],["website",{"_index":506,"title":{},"body":{"index.html":{}}}],["winston",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["winston.format.combine",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.errors",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.json",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.splat",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.timestamp",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":253,"title":{},"body":{"controllers/BooksController.html":{}}}],["winstonmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["writelog",{"_index":183,"title":{},"body":{"controllers/BooksController.html":{}}}],["writelog(starttime",{"_index":230,"title":{},"body":{"controllers/BooksController.html":{}}}],["www.imagen.com/quijote.png",{"_index":162,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["www.imagen.com/quijote.png'})@column",{"_index":143,"title":{},"body":{"entities/Book.html":{}}}],["you'd",{"_index":496,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BooksModule } from './books/books.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { configService } from 'config/config.service';\nimport { WinstonModule } from 'nest-winston'; \nimport * as winston from 'winston';\nimport * as path from 'path';\n\n@Module({\n  imports: [\n    BooksModule, \n    TypeOrmModule.forRoot( \n      configService.getTypeOrmConfig(),\n    ),WinstonModule.forRoot({\n      level: 'info', \n      format: winston.format.combine( \n        winston.format.timestamp({\n          format: 'YYYY-MM-DD HH:mm:ss',\n        }),\n        winston.format.errors({ stack: true }),\n        winston.format.splat(),\n        winston.format.json(),\n      ),\n      transports: [ \n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/debug/'),\n          filename: 'debug.log',\n          level: 'debug',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/error/'),\n          filename: 'error.log',\n          level: 'error',\n        }),\n        new winston.transports.File({\n          dirname: path.join(__dirname, './../log/info/'),\n          filename: 'info.log',\n          level: 'info',\n        }),\n        new winston.transports.Console({ level: 'debug' }),\n      ],\n    }),\n  ],\n  \n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            utilities/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n@Module({\n  imports: [\n    PassportModule.register({ \n      defaultStrategy: 'jwt', \n      property: 'user', \n      session: false,\n    }),\n  ],\n  controllers: [],\n  providers: [JwtStrategy], \n  exports: [PassportModule], \n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Book.html":{"url":"entities/Book.html","title":"entity - Book","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                author\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                genre\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image_url\n                            \n                            \n                                    \n                                    \n                                pages\n                            \n                            \n                                    \n                                    \n                                publisher\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 99})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Book {\n  @ApiProperty({ example: 99 })\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty({ example: 'Don Quijote de la Mancha' })\n  @Column()\n  title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  @Column()\n  genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  @Column('text')\n  description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  @Column()\n  author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  @Column()\n  publisher: string;\n\n  @ApiProperty({ example: 592 })\n  @Column()\n  pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  @Column()\n  image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDto.html":{"url":"classes/BookDto.html","title":"class - BookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                author\n                            \n                            \n                                    \n                                    Readonly\n                                description\n                            \n                            \n                                    \n                                    Readonly\n                                genre\n                            \n                            \n                                    \n                                    Readonly\n                                image_url\n                            \n                            \n                                    \n                                    Readonly\n                                pages\n                            \n                            \n                                    \n                                    Readonly\n                                publisher\n                            \n                            \n                                    \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'; \n\nexport class BookDto {\n  @ApiProperty({ example: 'Don Quijote de la Mancha' }) \n  readonly title: string;\n\n  @ApiProperty({ example: 'Novela' })\n  readonly genre: string;\n\n  @ApiProperty({\n    example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n  })\n  readonly description: string;\n\n  @ApiProperty({ example: 'Miguel de Cervantes' })\n  readonly author: string;\n\n  @ApiProperty({ example: 'Santillana' })\n  readonly publisher: string;\n\n  @ApiProperty({ example: 592 })\n  readonly pages: number;\n\n  @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n  readonly image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createBook\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteBook\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findBook\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateBook\n                            \n                            \n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        createBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBook(request: Request, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Crear un libro'})@ApiResponse({status: undefined, description: 'Datos del libro creado', type: Book})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n                    \n                        \n                            Defined in src/books/books.controller.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newBook\n                                            \n                                                            BookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':bookId')@ApiOperation({summary: 'Eliminar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro eliminado'})\n                \n            \n\n                    \n                        \n                            Defined in src/books/books.controller.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(request: Request, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtener lista de libros'})@ApiResponse({status: undefined, description: 'Lista de libros', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/books/books.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':bookId')@ApiOperation({summary: 'Devuelve información sobre un libro específico'})@ApiResponse({status: undefined, description: 'Datos del libro', type: Book})\n                \n            \n\n                    \n                        \n                            Defined in src/books/books.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateBook(request: Request, bookId: string, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':bookId')@ApiOperation({summary: 'Actualizar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro actualizado', type: Book})\n                \n            \n\n                    \n                        \n                            Defined in src/books/books.controller.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newBook\n                                            \n                                                            BookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeLog\n                        \n                    \n                \n            \n            \n                \nwriteLog(startTime: any, request: any, statusCode: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/books/books.controller.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startTime\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                statusCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Req,\n  Post,\n  Body,\n  Delete,\n  Put,\n  Inject,\n  UseGuards,\n  Res,\n} from '@nestjs/common';\nimport { BooksService } from './books.service';\nimport { Request } from 'express';\nimport { BookDto } from './book.dto';\nimport {\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { Book } from './book.entity';\nimport { AuthGuard } from '@nestjs/passport';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { HttpStatus } from '@nestjs/common'; \n@ApiTags('book')\n@Controller('books')\n@UseGuards(AuthGuard('jwt'))\n@ApiBearerAuth('access-token')\nexport class BooksController {\n  constructor(\n    private booksService: BooksService,\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n\n  @Get() \n  @ApiOperation({ summary: 'Obtener lista de libros' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Lista de libros',\n    type: [Book],\n  })\n  async findAll(@Req() request: Request, @Res() res): Promise {\n    let startTime = Date.now();\n    let data = await this.booksService.findAll(request.query);\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: 'OK',\n      data: data,\n    });\n  }\n\n  @Get(':bookId') \n  @ApiOperation({ summary: 'Devuelve información sobre un libro específico' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Datos del libro',\n    type: Book,\n  })\n  async findBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.findBook(bookId);\n\n    if (!data) {\n      message = 'A book with the specified id was not found';\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  @Post() \n  @ApiOperation({ summary: 'Crear un libro' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'Datos del libro creado',\n    type: Book,\n  })\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\n  async createBook(\n    @Req() request: Request,\n    @Body() newBook: BookDto,\n    @Res() res,\n  ): Promise {\n    let startTime = Date.now();\n    let data = await this.booksService.createBook(newBook);\n\n    this.writeLog(startTime, request, HttpStatus.CREATED);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      message: 'OK',\n      data: data,\n    });\n  }\n\n  @Delete(':bookId') \n  @ApiOperation({ summary: 'Eliminar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro eliminado',\n  })\n  async deleteBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.deleteBook(bookId);\n\n    if (data['affected'] == 0) {\n      message = 'A book with the specified id was not found';\n      data = {};\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  @Put(':bookId') \n  @ApiOperation({ summary: 'Actualizar un libro específico' })\n  @ApiResponse({\n    status: 200,\n    description: 'Datos del libro actualizado',\n    type: Book,\n  })\n  async updateBook(\n    @Req() request: Request,\n    @Param('bookId') bookId: string,\n    @Body() newBook: BookDto,\n    @Res() res,\n  ): Promise {\n    let message = 'OK';\n    let startTime = Date.now();\n    let data = await this.booksService.updateBook(bookId, newBook);\n\n    if (!data) {\n      message = 'A book with the specified id was not found';\n    }\n\n    this.writeLog(startTime, request, HttpStatus.OK);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      message: message,\n      data: data,\n    });\n  }\n\n  writeLog(startTime: any, request: any, statusCode: number) {\n    let finishTime = Date.now();\n    let elapsedTime = finishTime - startTime;\n\n    this.logger.log({\n      level: 'info',\n      message: '',\n      statusCode: statusCode,\n      method: request['method'],\n      url: request['url'],\n      user: request['user'].username,\n      duration: elapsedTime,\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_imports\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books/books.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Book } from './book.entity';\nimport { BooksService } from './books.service';\nimport { BooksController } from './books.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from 'utilities/auth.module';\n\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Book]),AuthModule], \n  providers: [BooksService], \n  controllers: [BooksController], \n})\nexport class BooksModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(booksRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books/books.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        booksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBook\n                        \n                    \n                \n            \n            \n                \ncreateBook(newBook: BookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/books/books.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newBook\n                                            \n                                                            BookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteBook(bookId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/books/books.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(params)\n                \n            \n\n\n                    \n                        \n                            Defined in src/books/books.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBook(bookId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/books/books.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateBook(bookId: string, newBook: BookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/books/books.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newBook\n                                            \n                                                            BookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpStatus, HttpException } from '@nestjs/common';\nimport { BookDto } from './book.dto'; \nimport { Book } from './book.entity'; \nimport { InjectRepository } from '@nestjs/typeorm'; \nimport { Repository } from 'typeorm'; \n\n@Injectable()\nexport class BooksService {\n\n  constructor(\n    @InjectRepository(Book) private booksRepository: Repository, \n  ) {}\n\n  async findAll(params): Promise { \n    return await this.booksRepository.find(); \n  }\n\n  async findBook(bookId: string): Promise {\n    return await this.booksRepository.findOne({ where: { id: parseInt(bookId)} }); \n  }\n\n  createBook(newBook: BookDto): Promise {\n    return this.booksRepository.save(newBook);\n  }\n\n  async deleteBook(bookId: string): Promise {\n    return await this.booksRepository.delete({ id: parseInt(bookId) });\n  }\n\n  async updateBook(bookId: string, newBook: BookDto): Promise { \n    let toUpdate = await this.booksRepository.findOne({ where: { id: parseInt(bookId)} }); \n\n    let updated = Object.assign(toUpdate, newBook); \n\n    return this.booksRepository.save(updated); \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            config/config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getTypeOrmConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in config/config.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ensureValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureValues(keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in config/config.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     this\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTypeOrmConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTypeOrmConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in config/config.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     TypeOrmModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n                    \n                        \n                            Defined in config/config.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                throwOnMissing\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm'; \n\nrequire('dotenv').config();\n\nclass ConfigService {\n  constructor(private env: { [k: string]: string | undefined }) {}\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key];\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`);\n    }\n\n    return value;\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach(k => this.getValue(k, true));\n    return this;\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions {\n    return {\n      type: 'postgres', \n\n      host: this.getValue('TUTORIAL_HOST'),\n      port: parseInt(this.getValue('TUTORIAL_PORT')),\n      username: this.getValue('TUTORIAL_USER'),\n      password: this.getValue('TUTORIAL_PASSWORD'),\n      database: this.getValue('TUTORIAL_DATABASE'),\n\n      entities: ['dist/**/*.entity.js'],\n      synchronize: true,\n    };\n  }\n}\n\nconst configService = new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n]);\n\nexport { configService };\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            utilities/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in utilities/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in utilities/jwt.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) { \n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(), \n      secretOrKey: 'secret', \n    });\n  }\n\n  async validate(payload: any): Promise { \n    if (!payload) {\n      throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n    }\n    return payload;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                config/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/books/book.class.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/book.dto.ts\n            \n            class\n            BookDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/books/book.entity.ts\n            \n            entity\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utilities/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^7.2.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            @sideway/formula : ^3.0.1\n        \n            joi : ^17.12.1\n        \n            mysql : ^2.18.1\n        \n            nest-winston : ^1.9.4\n        \n            nestjs-redoc : ^1.3.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^5.0.0\n        \n            typeorm : ^0.3.19\n        \n            winston : ^3.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nBooksModule -->\n\nAuthModule->BooksModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (config/.../config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
